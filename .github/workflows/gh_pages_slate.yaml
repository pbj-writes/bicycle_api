# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
  # branches to consider in the event; optional, defaults to all
    branches:
      - main
      - pages_test
      - dev
      - int
      - prod

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup GH Pages
        uses: actions/configure-pages@v3
      - run: sudo apt-get update
      - run: sudo apt-get install -y --no-install-recommends build-essential git nodejs
      - run: sudo gem install bundler      
      - run: bundle install
        working-directory: docs/          
      - run: chmod +x slate.sh
        working-directory: docs
      - run: ./slate.sh build
        working-directory: docs
      - run: cp -R build ${{ github.workspace }}/_site
        working-directory: docs
      - name: Fix permissions
        run: |
          chmod -c -R +rX "_site/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Cleanup artifacts
  cleanup:
    name: Cleanup workflow artifacts
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Cleanup workflow artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: github-pages
          failOnError: false
